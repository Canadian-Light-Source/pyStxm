import numpy as np
import matplotlib.pyplot as plt

s1 = "Using per_pnt_adjustment=0.0 we end up with the following: rmse = 0.164"
s2 = "Total error for 36 points is 4.916 sec, avgerr = 0.14 sec"
s3 = "Avg negative[0] = nan sec, Avg positve[36] = 0.14"
xdata = np.array([-0.15, -0.09, -0.03,  0.03,  0.09,  0.15])
ydata = np.array([-0.15, -0.09, -0.03,  0.03,  0.09,  0.15])
dwells_arr = np.array([1.373, 0.959, 2.082, 1.063, 1.892, 1.241, 1.795, 1.42 , 2.105,
       2.122, 1.534, 0.556, 1.052, 0.531, 1.738, 2.11 , 0.71 , 0.366,
       2.197, 0.245, 0.151, 1.023, 1.311, 2.051, 1.052, 2.06 , 1.152,
       0.993, 0.225, 1.826, 1.776, 2.179, 0.3  , 0.709, 0.725, 0.557])
err_arr = np.array([1.516498, 1.179103, 2.11219 , 1.152655, 1.982474, 1.443641,
       1.952988, 1.637568, 2.136145, 2.398214, 1.567712, 0.712746,
       1.20717 , 0.561525, 1.772073, 2.248804, 0.743092, 0.791206,
       2.35396 , 0.465355, 0.226765, 1.10972 , 1.409898, 2.207295,
       1.376264, 2.159962, 1.425512, 1.135788, 0.440754, 1.864601,
       1.872859, 2.214185, 0.393414, 0.78959 , 0.882373, 0.65267 ])
npnts = 6
totalerr = 4.915768999999999
rmse = 0.16403186053740015
neg_arr = np.array([])
pos_arr = np.array([0.143498, 0.220103, 0.03019 , 0.089655, 0.090474, 0.202641,
       0.157988, 0.217568, 0.031145, 0.276214, 0.033712, 0.156746,
       0.15517 , 0.030525, 0.034073, 0.138804, 0.033092, 0.425206,
       0.15696 , 0.220355, 0.075765, 0.08672 , 0.098898, 0.156295,
       0.324264, 0.099962, 0.273512, 0.142788, 0.215754, 0.038601,
       0.096859, 0.035185, 0.093414, 0.08059 , 0.157373, 0.09567 ])
all_actuals = [1.516498,
        1.179103,
        2.11219,
        1.152655,
        1.982474,
        1.443641,
        1.952988,
        1.637568,
        2.136145,
        2.398214,
        1.567712,
        0.712746,
        1.20717,
        0.561525,
        1.772073,
        2.248804,
        0.743092,
        0.791206,
        2.35396,
        0.465355,
        0.226765,
        1.10972,
        1.409898,
        2.207295,
        1.376264,
        2.159962,
        1.425512,
        1.135788,
        0.440754,
        1.864601,
        1.872859,
        2.214185,
        0.393414,
        0.78959,
        0.882373,
        0.65267]
totalerr_lst = [0.1434979999999999,
        0.22010299999999994,
        0.03019000000000016,
        0.08965500000000004,
        0.09047399999999994,
        0.20264099999999985,
        0.15798800000000002,
        0.21756799999999998,
        0.031144999999999978,
        0.27621399999999996,
        0.033711999999999964,
        0.15674599999999994,
        0.15517000000000003,
        0.030525000000000024,
        0.03407300000000002,
        0.13880399999999993,
        0.03309200000000001,
        0.425206,
        0.15695999999999977,
        0.22035500000000002,
        0.075765,
        0.08671999999999991,
        0.09889800000000015,
        0.15629499999999963,
        0.3242639999999999,
        0.0999620000000001,
        0.27351199999999976,
        0.14278800000000003,
        0.21575399999999997,
        0.038600999999999885,
        0.09685900000000003,
        0.035185000000000244,
        0.093414,
        0.08059000000000005,
        0.15737299999999999,
        0.09566999999999992]


per_pnt_adjustment = 0.0
totalerr = np.sum(totalerr_lst)
_xdata = list(range(len(all_actuals)))
print(s1)
print(s2)
print(s3)
#plt.text(xdata[0]+1, ydata[0]+ 2.95, s1, fontsize=7)
#plt.text(xdata[0]+1, ydata[0]+ 2.75, s2, fontsize=7)
#plt.text(xdata[0]+1, ydata[0]+ 2.85, s3, fontsize=7)
fig, ax = plt.subplots()
plt.plot(_xdata, dwells_arr, label="Dwell")
plt.plot(_xdata, err_arr, label="Actual")
plt.legend()
# these are matplotlib.patch.Patch properties
props = dict(boxstyle='round', facecolor='wheat', alpha=0.5)

delt_sec = 37.881502
total_dwell_time = 37.108000000000004

textstr = '\n'.join((
                r' expected time=%.2f sec  actual=%.2f sec' % (total_dwell_time, delt_sec),
                r'$\ rmse=%.2f$ sec' % (rmse,),
                r'$\ per pnt adjustment=%.2f$ sec' % (per_pnt_adjustment,)))
#teststr = '$\\ expected time=37.11$ sec  actual=37.88$ sec\n$\\ rmse=0.07$ sec\n$\\ ttl err for 36 pnts=0.10$ sec\n$\\ per pnt adjustment=0.12$ sec'
# place a text box in upper left in axes coords
ax.text(0.05, 1.14, textstr, transform=ax.transAxes, fontsize=7,
        verticalalignment='top', bbox=props)
plt.show()
#plt.savefig("tst_output/tuesday/per_pnt_adjustment_%.2f.jpg" % per_pnt_adjustment)